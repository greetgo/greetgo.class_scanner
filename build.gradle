buildscript {
  repositories {
    mavenLocal()
    if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
    mavenCentral()
  }
  dependencies {
    classpath "kz.greetgo.plugins:greetgo.gradle.plugins:0.0.5"
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
//noinspection UnnecessaryQualifiedReference
apply plugin: kz.greetgo.gradle.plugins.MavenUploadPlugin

version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "kz.greetgo.class_scanner"

repositories {
  mavenLocal()
  if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
  mavenCentral()
}

dependencies {
  compile 'com.metapossum:metapossum-scanner:1.0.1'

  testCompile 'org.testng:testng:6.5.1'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
}

uploadToMavenCentral {
  description = "Very simple class scanner"
  url = 'https://github.com/greetgo/greetgo.class_scanner'
  scm.url = 'https://github.com/greetgo/greetgo.class_scanner.git'
  developer {
    id = 'pompei'
    name = 'Evgeniy Kolpakov'
    email = 'ekolpakov@greet-go.com'
  }
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
  options.addStringOption('encoding', 'UTF-8')
  options.addStringOption('charSet', 'UTF-8')
}

test.useTestNG()

idea.module.inheritOutputDirs = false
idea.module.outputDir = file("$buildDir/classes/main/")
idea.module.testOutputDir = file("$buildDir/classes/test/")

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

sourceSets.main.java.srcDirs = ["src"]
sourceSets.test.java.srcDirs = ["test_src"]
sourceSets.main.resources.srcDirs = ["src_resources"]
sourceSets.test.resources.srcDirs = ["test_resources"]

sourceSets.main.resources {
  srcDirs += sourceSets.main.java.srcDirs
  exclude '**/*.java'
}
sourceSets.test.resources {
  srcDirs += sourceSets.test.java.srcDirs
  exclude '**/*.java'
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name
    attributes 'Implementation-Version': version
    attributes 'Implementation-Vendor': "greetgo!"
    attributes 'Created-By': System.getProperty("user.name")
    attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
  }
}
