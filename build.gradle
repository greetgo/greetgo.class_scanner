def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")
def vendorName = "greetgo!"

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

version = '0.0.1'

sourceCompatibility = 1.7

group = "kz.greetgo.class_scanner"

eclipse.project.natures 'org.springsource.ide.eclipse.gradle.core.nature'

repositories {
  mavenLocal()
  if (System.getenv('GG_REPO') != null && System.getenv('GG_REPO').length() > 0) {
    maven { url System.getenv('GG_REPO') }
  }
  mavenCentral()
}

dependencies {
  compile 'com.metapossum:metapossum-scanner:1.0.1'

  testCompile 'org.testng:testng:6.5.1'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
}

compileJava {
  options.encoding = "UTF-8"
}
compileTestJava {
  options.encoding = "UTF-8"
}

project.eclipse.classpath.file.whenMerged { cp ->
  if (project.hasProperty("sourceCompatibility")) {
    cp.entries.findAll { it.path.contains('JRE_CONTAINER') }.each {
      it.path += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/" +
          "JavaSE-$project.sourceCompatibility"
    }
  }
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name,
        'Implementation-Version': version, 'Implementation-Vendor': vendorName,
        'Built-By': System.getProperty("user.name"), 'Built-At': nowFormattedDate
  }
}

sourceSets {
  main {
    java.srcDirs = ["src", "src_resources"]
    resources.srcDirs = ["src", "src_resources"]
  }
  test {
    java.srcDirs = ["test_src", "test_src_resources"]
    resources.srcDirs = ["test_src", "test_src_resources"]
  }
}

test { useTestNG() }

task javadocJar(type: Jar, dependsOn: 'javadoc') {
  from javadoc.destinationDir
  classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

uploadArchives {
  repositories.mavenDeployer {
    configuration = configurations.archives
    repository(url: System.getenv('GG_REPO'))

    pom.project {
      name project.name
      packaging 'jar'
    }
  }
}
